[build-system]
requires = ["setuptools>=61.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "yaaml"
dynamic = ["version"]
description = "Yet Another AutoML - A native Python AutoML library"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"
authors = [{ name = "Varun Rajan", email = "varun@example.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = ["numpy>=2.0.0", "pandas>=2.0.0", "scikit-learn>=1.5.0"]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.0",
    "mypy>=1.17.0",
    "bandit[toml]>=1.7.0",
    "pre-commit>=4.0.0",
    "setuptools-scm>=8.0.0",
    # Type stubs for mypy
    "types-requests",
    "pandas-stubs>=2.3.0",
    "types-setuptools",
]
docs = ["mkdocs>=1.6.0", "mkdocs-material>=9.5.0"]

[project.urls]
Homepage = "https://github.com/JordanRex/yaaml"
Repository = "https://github.com/JordanRex/yaaml"

[tool.setuptools.packages.find]
where = ["."]
include = ["yaaml*"]

# Testing
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=yaaml",
    "--cov-report=term-missing",
    "--cov-report=html:coverage/htmlcov",
    "--cov-report=xml:coverage/coverage.xml",
    "-v",
]

# Coverage configuration
[tool.coverage.run]
source = ["yaaml"]
data_file = "coverage/.coverage"
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*", "*/env/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Code quality
[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "UP"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
# Apply same linting standards to all folders: yaaml/, tests/, scripts/

# Type checking
[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true

# Files and paths
files = ["yaaml", "tests", "scripts"]
exclude = [
    "^build/",
    "^dist/",
    "^coverage/",
    "^\\.venv/",
    "^\\.env/",
    "^\\.mypy_cache/",
    "^\\.pytest_cache/",
]

# Enable recursive discovery
namespace_packages = true
explicit_package_bases = true

# Dynamic versioning from git tags
[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

# Security linting
[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv", "env", ".env"]
# B101: assert_used (excluded by default)
# B110: try_except_pass - intentional fallbacks for optional metrics
# B404: import subprocess - legitimate in development scripts
# B603: subprocess_without_shell_equals_true - safe subprocess calls
# B607: start_process_with_partial_path - safe git/uv commands
skips = ["B101", "B110", "B404", "B603", "B607"]
